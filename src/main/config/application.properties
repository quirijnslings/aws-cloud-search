service.svc.prefix=/v2
spring.jmx.enabled = false
allowedAutoRegistrationCapabilities=DeployerCapability
springfox.documentation.swagger.v2.path=/v2/api-docs
rules.location=deployer-rw-rules.xml

# specifies the maximum size permitted for uploaded files.
spring.servlet.multipart.maxFileSize=1000MB
# specifies the maximum size allowed for multipart/form-data requests.
spring.servlet.multipart.maxRequestSize=1000MB

# Security settings for Elasticsearch service. Defaults to empty string if environment variable not set.
# Used in case if embedded Elasticsearch client was added to the classpath.
es.username=${esusername:}
es.password=${espassword:}
es.ingest.username=${esingestusername:}
es.ingest.password=${esingestpassword:}

# specify cron schedule for state store cleanup.
# if defined then spring scheduled task will be executed by this cron expression to cleanup state store records.
# e.x.: "0 0 3 * * SUN" - execute cleanup at 03:00:00am, on every Sunday, every month.
state.store.cleanup.cron=${statestorecleanupcron:}

# specify interval to mark state store records obsolete. records older then this period of time from task execution time will be deleted by scheduled task.
# this value cannot be less then 1 day = 86400000 millis. works only if 'state.store.cleanup.cron' property defined.
state.store.obsolete.records.interval=${statestoreobsoleterecordsinterval:}

# parameter which can enable/disable addon service.
# default value is true.
addon.service.enabled=true

# add-on heartbeat interval. determines how often we should report live status of a service to add-on service.
# default value is every 60000 millis = 1 minute.
addon.heartbeat.interval=60000

# Security enable flag
#service.security.enabled=false

# Active Spring profiles:
# default - enable default functionality
# search - enable search functionality
spring.profiles.active=${springprofilesactive:default,search}